[package]
name = "opentelemetry-tracing-utils"
version = "0.4.0"
edition.workspace = true
license = "MIT OR Apache-2.0"
authors.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Some opinionated useful utilities for setting up otel tracing in Rust"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# error types
thiserror = "1.0.58"
anyhow = "1.0.82"
# tokio tracing
tracing = "0.1.40"
# Implements the types defined in the Otel spec
# "rt-tokio-current-thread" required for batch exports of spans
opentelemetry_sdk = { version = "0.21.1", features = ["rt-tokio-current-thread"] }
opentelemetry = { version = "0.21.0" }
opentelemetry-semantic-conventions = "0.13.0"
# Allows you to export data to OTEL collector
# Requires protoc to be installed (protobuf compiler)
opentelemetry-otlp = "0.14.0"
serde = { version = "1.0.200", features = ["derive"] }
serde_json = "1.0.116"
tracing-serde = "0.1.3"
tracing-subscriber = { version = "0.3.18", features = ["json", "env-filter"] }
# Integration between the tracing crate and the opentelemetry crate
tracing-opentelemetry = "0.22.0"
tonic = "0.8.3"
tower = { version = "0.4.13", optional = true }
http = { version = "1.0.0", optional = true }
opentelemetry-http = { version = "0.10.0", optional = true }
opentelemetry-stdout = { version = "0.2.0", features = ["trace"] }

[features]
default = ["tower"]
tower = ["dep:tower", "dep:http", "dep:opentelemetry-http"]
